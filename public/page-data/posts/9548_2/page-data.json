{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/9548_2","webpackCompilationHash":"","result":{"data":{"markdownRemark":{"id":"d4929fe6-29f1-5c0a-9441-1ae4b1e3d0a9","html":"<p>광역 최적화에 방법인 Monte Carlo with Minimization, Genetic Algorithm, Conformational Space Annealing에 대해 알아보고 결합자리 곁 사슬 구조 유연성을 고려한 단백질-리간드 도킹에 대한 방법에 대해 알아보고자 한다. EDISON에서 제공하는 단백질-리간드 도킹 프로그램(GalaxyDock2) 사용방법을 확인해 본다.</p>\n<p>단백질-리간드 도킹 프로그램(GalaxyDock2)을 이해하기 위해 단백질 수용체의 구조 유연성과 Rotamer library에 대한 이해 그리고 프로그램의 입출력 파일에 대해 소개한다.</p>\n<h2 id=\"부분-최적화와-광역-최적화\"><a href=\"#%EB%B6%80%EB%B6%84-%EC%B5%9C%EC%A0%81%ED%99%94%EC%99%80-%EA%B4%91%EC%97%AD-%EC%B5%9C%EC%A0%81%ED%99%94\" aria-label=\"부분 최적화와 광역 최적화 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>부분 최적화와 광역 최적화</h2>\n<h3 id=\"부분-최적화\"><a href=\"#%EB%B6%80%EB%B6%84-%EC%B5%9C%EC%A0%81%ED%99%94\" aria-label=\"부분 최적화 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>부분 최적화</h3>\n<p>주어진 시작 구조에서 가장 가까운 국소 에너지 최소값을 찾는 계산 방법이다. 양자 계산과 같이 한 점에서의 에너지 계산이 시간이 많이 걸릴 때 사용되며, 광역최적화 방법의 시작점이 될 수 있다.</p>\n<p><img src=\"/media/POST/9548/0.jpg\" alt=\"image\"></p>\n<h3 id=\"광역-최적화\"><a href=\"#%EA%B4%91%EC%97%AD-%EC%B5%9C%EC%A0%81%ED%99%94\" aria-label=\"광역 최적화 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>광역 최적화</h3>\n<p>주어진 함수에서 제일 낮은 함수값을 갖는 지점을 찾는 방법으로 Monte Carlo with Minimization (MCM), Genetic Algorithm (GA), Conformational Space Annealing (CSA) 등의 방법이 있다.</p>\n<p><img src=\"/media/POST/9548/1.jpg\" alt=\"image\"></p>\n<h2 id=\"광역-최적화-방법-mcm\"><a href=\"#%EA%B4%91%EC%97%AD-%EC%B5%9C%EC%A0%81%ED%99%94-%EB%B0%A9%EB%B2%95-mcm\" aria-label=\"광역 최적화 방법 mcm permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>광역 최적화 방법: MCM</h2>\n<p>Monte Carlo with minimization은 추측 통계학적인 방법으로서 탐색 공간 상에서 하나의 상태 (m)에서 다음의 상태 (n)로 이동 하면서 탐색할 때, 이동에 수반되는 함수값의 변화에 기반하여 이 상태 변화를 허용할 것인지 아닐지를 결정한다.</p>\n<ol>\n<li>랜덤 구조 R을 시작구조로 삼는다.</li>\n<li>R (상태 m)에 perturbation을 주어 새로운 구조 R*=R+ΔR\n(상태 n)을 만든다.</li>\n<li>R*를 국소 최적화 방법을 사용해 local minima를 찾는다.</li>\n<li>R의 에너지 E(R)과 국소 최적화를 마친 R<em>의 에너지 E(R</em>) 의 에너지를 비교한다.</li>\n<li>ΔE= E(R*)- E(R)가 0보다 작으면, 상태 m을 n으로 치환하 고 0보다 크면 acceptance probability에 때라 치환할 것 인지 아닌지를 결정한다.</li>\n<li>상태 m이 수렴할 때까지 2-4를 반복한다.\n</li>\n</ol>\n<h2 id=\"광역-최적화-방법-ga\"><a href=\"#%EA%B4%91%EC%97%AD-%EC%B5%9C%EC%A0%81%ED%99%94-%EB%B0%A9%EB%B2%95-ga\" aria-label=\"광역 최적화 방법 ga permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>광역 최적화 방법: GA</h2>\n<p>GA (genetic algorithm)는 생물의 진화현상을 모방하여 탐색 공간 상의 여러 지점을 동시에 진화시켜가며 탐색하는 기법이다. 어떠한 문제의 해를 유전자와 같은 모양으로 나타내어, 이 유전 자의 집합으로 구성된 population을 실제 진화의 과정에서 많은 부분을 차용한 변이, 교배 연산 등을 활용하여 더 좋은 해를 찾는 방법이다. GA를 어떤 문제에 적용하기 위해서는 해를 유전자의 형식으로 표현할 수 있어야 하며, 이 해가 얼마나 적합한지를 적합도 함수 를 통해 계산할 수 있어야 한다.</p>\n<p><img src=\"/media/POST/9548/2.jpg\" alt=\"image\"></p>\n<h2 id=\"광역-최적화-방법-csa\"><a href=\"#%EA%B4%91%EC%97%AD-%EC%B5%9C%EC%A0%81%ED%99%94-%EB%B0%A9%EB%B2%95-csa\" aria-label=\"광역 최적화 방법 csa permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>광역 최적화 방법: CSA</h2>\n<p>CSA(conformational space annealing)란, GA와 비슷한 집단기반의 광역 최적화 방법으로서 벡터로 표현된 해의 집합들을 교배연산, 변이 등을 통해 광역 최적화를 수행하는 방법이다. CSA와 다른 집단기반 광역최적화 기법들과의 차이점은 각각의 해들이 구조공간상에서의 일정한 영역을 대표한다고 가정한다는 점이다. 이 영역을 CSA를 진행시켜가면서 줄여감에 따라 초기에는 넓은 영역을, 나중에는 좁은 영역을 찾는다. 이 과정을 통해 다른 방법에 비하여 최소값을 더 잘 찾게 된다.</p>\n<p><img src=\"/media/POST/9548/3.jpg\" alt=\"image\"></p>\n<h2 id=\"단백질-리간드-결합-모형\"><a href=\"#%EB%8B%A8%EB%B0%B1%EC%A7%88-%EB%A6%AC%EA%B0%84%EB%93%9C-%EA%B2%B0%ED%95%A9-%EB%AA%A8%ED%98%95\" aria-label=\"단백질 리간드 결합 모형 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단백질-리간드 결합 모형</h2>\n<p>단백질-리간드의 구조적 결합 모형에 있어, 크게 두 가지의 이론이 존재한다. </p>\n<ol>\n<li>자물쇠-열쇠 모형</li>\n<li>유도적합 모형</li>\n</ol>\n<p><img src=\"/media/POST/9548/4.jpg\" alt=\"image\"></p>\n<h2 id=\"광역-최적화와-도킹-프로그램\"><a href=\"#%EA%B4%91%EC%97%AD-%EC%B5%9C%EC%A0%81%ED%99%94%EC%99%80-%EB%8F%84%ED%82%B9-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8\" aria-label=\"광역 최적화와 도킹 프로그램 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>광역 최적화와 도킹 프로그램</h2>\n<p>단백질-리간드 도킹 프로그램의 평가함수 (자유에너 지 함수)가 점점 복잡해짐에 따라 simplex와 같은 부 분 최적화 방법으로는 좋은 구조, 해를 찾기가 점차 어려워 졌다.</p>\n<h3 id=\"도킹-프로그램에-사용되는-광역최적화-기법은-다음과-같다\"><a href=\"#%EB%8F%84%ED%82%B9-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%97%90-%EC%82%AC%EC%9A%A9%EB%90%98%EB%8A%94-%EA%B4%91%EC%97%AD%EC%B5%9C%EC%A0%81%ED%99%94-%EA%B8%B0%EB%B2%95%EC%9D%80-%EB%8B%A4%EC%9D%8C%EA%B3%BC-%EA%B0%99%EB%8B%A4\" aria-label=\"도킹 프로그램에 사용되는 광역최적화 기법은 다음과 같다 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>도킹 프로그램에 사용되는 광역최적화 기법은 다음과 같다.</h3>\n<ul>\n<li>AutoDock (GA)</li>\n<li>RosettaLigand (MCM) </li>\n<li>ICM (MCM)</li>\n<li>GalaxyDock (CSA)\n</li>\n</ul>\n<p>단백질 수용체의 구조 유연성이 도킹 문제에서 중요해짐에 따라, 곁가지 혹은 골격 구조 변화를 고려하는 도킹 방법들이 많이 개발되고 있다. 단백질의 구조 변화를 고려하게 되는 경우, 도킹 프로그램이 풀 어야 하는 문제의 자유도가 증가하게 되며, 따라서 좋은 성능의 광역 최적화 방법이 필요하다.</p>\n<h2 id=\"galaxydock2\"><a href=\"#galaxydock2\" aria-label=\"galaxydock2 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GalaxyDock2</h2>\n<p>GalaxyDock2는 단백질의 구조 유연성을 고려한 도킹 프로그램이다.</p>\n<ul>\n<li>GalaxyDock2는 단백질의 결합자리에 있는 잔기의 곁가지의 구조 유연성을 고려한다. 광역최적화 기법으로는 CSA를 사용하며, 곁가지의 구조는 rotamer library를 사용하며, 단백질의 구조 변화로부터 기인한 에너지 변화는 통계기반 평가함수인 ROTA를 사용하여 계산한다.</li>\n<li>이 프로그램은 다음 논문에 설명된 알고리듬을 이용한다.\nW. -H. Shin and C. Seok, GalaxyDock: Protein-ligand docking with flexible protein side-chains, J. Chem. Inf. Model, 52 (12), 3225-3232 (2012).\n</li>\n</ul>\n<h2 id=\"rotamer-library\"><a href=\"#rotamer-library\" aria-label=\"rotamer library permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rotamer library</h2>\n<p>Rotamer library란 단백질 구조 데이터베이스로부터 특정한 주 사슬의 φ,ψ 각도에 따른 곁 가지의 이면각의 빈도수를 통계처리 하여 얻은 데이터베이스다.</p>\n<p> <img src=\"/media/POST/9548/5.jpg\" alt=\"image\"></p>\n<h3 id=\"필요한-입력-파일\"><a href=\"#%ED%95%84%EC%9A%94%ED%95%9C-%EC%9E%85%EB%A0%A5-%ED%8C%8C%EC%9D%BC\" aria-label=\"필요한 입력 파일 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>필요한 입력 파일</h3>\n<ul>\n<li>도킹에 필요한 세가지 입력 파일은 단백질과 리간드의 3차원 구조이며 입력할 파라미터는 결합자리의 중심좌표와 구조 유연성을 고려할 잔기의 번호이다. 단백질 구조와 리간드 구조는 MOL2 또는 PDB 포맷으로 되어 있어야 한다. 도킹 박스 중심 좌표는 관련되는 실험구조나 모델구조가 있을 경우, 그 구조에 붙어 있는 다른 리간드의 위치를 참고하여 정할 수도 있으므로, GalaxyDock input으로 다른 리간드 가 붙어 있는 단백질 구조를 제공하면 이로부터 도킹 박스 중 심 좌표를 계산해 준다. 물론, 도킹 박스 중심 좌표를 직접 입력하여도 된다.\n</li>\n</ul>\n<h2 id=\"단백질-구조-준비\"><a href=\"#%EB%8B%A8%EB%B0%B1%EC%A7%88-%EA%B5%AC%EC%A1%B0-%EC%A4%80%EB%B9%84\" aria-label=\"단백질 구조 준비 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단백질 구조 준비</h2>\n<h3 id=\"단백질-구조-얻기\"><a href=\"#%EB%8B%A8%EB%B0%B1%EC%A7%88-%EA%B5%AC%EC%A1%B0-%EC%96%BB%EA%B8%B0\" aria-label=\"단백질 구조 얻기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단백질 구조 얻기</h3>\n<p>앞서 다른 GALAXY 프로그램에 대한 설명에서 나왔듯이, 단백질 구조를 나타내는 가장 흔한 포맷은 PDB 포맷이다. 단백질 구조는 실험 구조나 모델 구조 모두 가능하다. 실험 구조는 RCSD PDB (www.rcsb.org)에서 내려 받거나 또는 Chimera와 같은 프로그램을 사용하여 내려 받는다.</p>\n<h3 id=\"리간드-구조는-pubchem-id에서-시작하여-mol2-format으로-변환\"><a href=\"#%EB%A6%AC%EA%B0%84%EB%93%9C-%EA%B5%AC%EC%A1%B0%EB%8A%94-pubchem-id%EC%97%90%EC%84%9C-%EC%8B%9C%EC%9E%91%ED%95%98%EC%97%AC-mol2-format%EC%9C%BC%EB%A1%9C-%EB%B3%80%ED%99%98\" aria-label=\"리간드 구조는 pubchem id에서 시작하여 mol2 format으로 변환 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리간드 구조는 pubchem ID에서 시작하여 mol2 format으로 변환</h3>\n<p>도킹을 위한 리간드 구조 또한 삼차원 구조로 제공하여야 한다. 여기서는 pubchem에 등록되어 있는 리간드 구조에 대해 비교적 간단히 준비하는 방법을 소개 간략 소개한다. (자세한 방법은 GalaxyDock version1에 올라가 있는 매뉴얼을 참고)</p>\n<h3 id=\"chimera-에서-리간드-로딩하기\"><a href=\"#chimera-%EC%97%90%EC%84%9C-%EB%A6%AC%EA%B0%84%EB%93%9C-%EB%A1%9C%EB%94%A9%ED%95%98%EA%B8%B0\" aria-label=\"chimera 에서 리간드 로딩하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Chimera 에서 리간드 로딩하기</h3>\n<ol>\n<li>File>FetchbyID선택</li>\n<li>대화창이 나타나면, PubChem을 선택하고 원하는 화합물 아이디를 입력</li>\n<li>Fetch 버튼을 누름</li>\n</ol>\n<p> <img src=\"/media/POST/9548/6.jpg\" alt=\"image\"></p>\n<h3 id=\"리간드에-수소원자-붙이기\"><a href=\"#%EB%A6%AC%EA%B0%84%EB%93%9C%EC%97%90-%EC%88%98%EC%86%8C%EC%9B%90%EC%9E%90-%EB%B6%99%EC%9D%B4%EA%B8%B0\" aria-label=\"리간드에 수소원자 붙이기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리간드에 수소원자 붙이기</h3>\n<ol>\n<li>Tools > Structure Editing > DockPrep</li>\n<li>대화창의 OK버튼을 눌러 수소를 붙인 후 전하는 Gasteiger를 선택한 후 MOL2 형식으로 저장한다.</li>\n</ol>\n<p> <img src=\"/media/POST/9548/7.jpg\" alt=\"image\"></p>\n<h5 id=\"galaxydock2-입력-예시\"><a href=\"#galaxydock2-%EC%9E%85%EB%A0%A5-%EC%98%88%EC%8B%9C\" aria-label=\"galaxydock2 입력 예시 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GalaxyDock2 입력 예시</h5>\n<p>앞에서 생성한 단백질 파일과 리간드 파일을 업로드 하면 된다.</p>\n<p> <img src=\"/media/POST/9548/8.jpg\" alt=\"image\"></p>\n<h2 id=\"도킹-결과-분석\"><a href=\"#%EB%8F%84%ED%82%B9-%EA%B2%B0%EA%B3%BC-%EB%B6%84%EC%84%9D\" aria-label=\"도킹 결과 분석 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>도킹 결과 분석</h2>\n<p>결과 파일을 내려받은 후 Chimera와 같은 뷰어를 사용하여 도킹된 리간드와 단백질의 구조를 볼 수 있다.\n<img src=\"/media/POST/9548/9.jpg\" alt=\"image\"></p>","fields":{"slug":"/posts/9548_2","tagSlugs":["/tag/integrated-area-optimization/","/tag/protein-ligand-docking/"]},"frontmatter":{"date":"2019-07-21T22:40:32.169Z","description":"광역 최적화에 방법인 Monte Carlo with Minimization, Genetic Algorithm, Conformational Space Annealing에 대해 알아보고 결합자리 곁 사슬 구조 유연성을 고려한 단백질-리간드 도킹에 대한 방법에 대해 알아보고자 한다.","tags":["Integrated Area Optimization ","Protein-Ligand Docking "],"title":"광역 최적화와 단백질-리간드 도킹"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/9548_2"}}}